///
/// TextToSpeechOnLoad.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "TextToSpeechOnLoad.hpp"

#include <jni.h>
#include <fbjni/fbjni.h>
#include <NitroModules/HybridObjectRegistry.hpp>

#include "JHybridTextToSpeechSpec.hpp"
#include "JFunc_void.hpp"
#include "JFunc_void_std__optional_std__string_.hpp"
#include <NitroModules/JNISharedPtr.hpp>
#include <NitroModules/DefaultConstructableObject.hpp>

namespace margelo::nitro::texttospeech {

int initialize(JavaVM* vm) {
  using namespace margelo::nitro;
  using namespace margelo::nitro::texttospeech;
  using namespace facebook;

  return facebook::jni::initialize(vm, [] {
    // Register native JNI methods
    margelo::nitro::texttospeech::JHybridTextToSpeechSpec::registerNatives();
    margelo::nitro::texttospeech::JFunc_void::registerNatives();
    margelo::nitro::texttospeech::JFunc_void_std__optional_std__string_::registerNatives();

    // Register Nitro Hybrid Objects
    HybridObjectRegistry::registerHybridObjectConstructor(
      "TextToSpeech",
      []() -> std::shared_ptr<HybridObject> {
        static DefaultConstructableObject<JHybridTextToSpeechSpec::javaobject> object("com/texttospeech/TextToSpeech");
        auto instance = object.create();
        auto globalRef = jni::make_global(instance);
        return JNISharedPtr::make_shared_from_jni<JHybridTextToSpeechSpec>(globalRef);
      }
    );
  });
}

} // namespace margelo::nitro::texttospeech
